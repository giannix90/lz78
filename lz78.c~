#include <stdint.h>
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>
 #include <sys/types.h>

#include "lz78.h"


int hash(int num, char c){
	int prime=17;
	int x=26;
	return (num*x+(int)c)%hash_table_size; //i calculate the index of hash table
}

int hash_fill(){
	char c='a';
	while(c<='z'){	
		hash_table[hash(0,c)].child_index=0;
		(hash_table[hash(0,c)].key).father_num=0;
		(hash_table[hash(0,c)].key).c=c;
		c++;	
	}
	return 0;
}


int hash_init(int size){
	hash_table_size=size;
	hash_table=malloc(sizeof(struct hash_elem)*size);
	if(hash_table==NULL) return -1;
	if(hash_fill())return -1;
	return 0;
}

void print_hash_table(){
	printf("     HASH	\n");
	printf("-------------\n");
	for(int i=0;i<hash_table_size;i++){
		for(int j=0;j<hash_table_size;j++){
			if(hash_table[j].key.father_num==i)printf("| %d | %c | %d |\n",hash_table[j].key.father_num,hash_table[j].key.c,hash_table[j].child_index);
		//printf("-------------\n");		
		}
		
	}
}

void compress(char * str_in,struct lz78 * in){
	in->file_to_compress=str_in;
}

